{"version":3,"sources":["webpack://TaskRunner/webpack/universalModuleDefinition","webpack://TaskRunner/webpack/bootstrap","webpack://TaskRunner/./src/util.js","webpack://TaskRunner/./src/PrivateFunctions.js","webpack://TaskRunner/./src/log.js","webpack://TaskRunner/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isFunction","item","isNumber","isNaN","assignFunction","run","this","tasks","list","length","running","concurrency","shift","completed","duration","total","Date","now","start","onDone","end","__working","onEnd","startCheck","onStart","addCheck","onAdd","removeCheck","onRemove","startCheckAndRun","runPending","Infinity","logs","already_running","auto_start_true","add_requires_function","add_multiple_requires_array_of_functions","concurrency_not_a_number","concurrency_should_be_positive_integer","log","logKey","config","__webpack_exports__","src_TaskRunner","TaskRunner","arguments","undefined","_classCallCheck","src_initialiseProps","otherConfig","_objectWithoutProperties","_extends","autoStart","runnerCount","setConcurrency","seal","isBusy","_this","parseInt","console","warn","Math","abs","number","defaultNumber","listLength","assignNumber","add","task","first","push","unshift","TypeError","addFirst","addMultiple","constructor","Array","isArray","every","concat","addMultipleFirst","remove","pop","removeFirst","removeAt","index","splice","removeAll"],"mappings":"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","file":"concurrent-tasks.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TaskRunner\"] = factory();\n\telse\n\t\troot[\"TaskRunner\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const isFunction = item => typeof item === 'function';\nexport const isNumber = item => typeof item === 'number' && !isNaN(item);\nexport const isString = item => typeof item === 'string';\nexport const isArray = item => item.constructor === Array;\nexport const isEmptyString = item => isString(item) && !item;\n\nexport const assignFunction = item => {\n    if (isFunction(item)) {\n        return item;\n    }\n};\n\nexport const assignNumber = (number, defaultNumber, listLength) => {\n    if (isNumber(number)) {\n        if (number === 0) {\n            return listLength;\n        }\n\n        return number;\n    }\n\n    return defaultNumber;\n};\n","import { isFunction } from './util';\n\nexport function run() {\n    if (this.tasks.list.length) {\n        if (this.tasks.running < this.concurrency) {\n            this.tasks.list.shift()(done.bind(this));\n            this.tasks.running++;\n        }\n    } else {\n        if (this.tasks.completed === this.tasks.total) {\n            this.duration.end = Date.now();\n            this.duration.total = this.duration.end - this.duration.start;\n            this.__working = false;\n            if (isFunction(this.onEnd)) {\n                const {\n                    tasks: { completed },\n                    duration\n                } = this;\n                this.onEnd({ completed, duration });\n            }\n        }\n    }\n}\n\nexport function done() {\n    this.tasks.completed++;\n    this.tasks.running--;\n    this.duration.total = Date.now() - this.duration.start;\n    if (isFunction(this.onDone)) {\n        this.onDone(this.tasks);\n    }\n    run.call(this);\n}\n\nexport function startCheck() {\n    if (!this.__working) {\n        this.duration.start = Date.now();\n        this.__working = true;\n        if (isFunction(this.onStart)) {\n            const { duration } = this;\n            this.onStart({ duration });\n        }\n    }\n}\n\nexport function addCheck() {\n    if (isFunction(this.onAdd)) {\n        const { tasks } = this;\n        this.onAdd({ tasks });\n    }\n}\n\nexport function removeCheck() {\n    if (isFunction(this.onRemove)) {\n        const { tasks } = this;\n        this.onRemove({ tasks });\n    }\n}\n\nexport function startCheckAndRun() {\n    startCheck.call(this);\n    run.call(this);\n}\n\nexport function runPending() {\n    if (this.tasks.running < this.concurrency) {\n        const concurrency =\n            this.concurrency === Infinity\n                ? this.tasks.list.length\n                : this.concurrency;\n        for (let i = this.tasks.running; i < concurrency; i++) {\n            run.call(this);\n        }\n    }\n}\n","const logs = {\n    already_running:\n        'Cannot start TaskRunner instance as it is already running!',\n    auto_start_true:\n        'Cannot programmatically start TaskRunner instance as autoStart is true!',\n    add_requires_function:\n        'The \"add\" operation requires a function. Check if the first argument is a function!',\n    add_multiple_requires_array_of_functions:\n        'The \"addMultiple\" operation requires an array of functions. Check if the first argument is an array and whether all the items in the array are functions!',\n    concurrency_not_a_number:\n        'Concurrency should be a positive number. Defaulting to 3.',\n    concurrency_should_be_positive_integer:\n        'Concurrency should be a positive integer. Seems like you have supplied a negative value!'\n};\n\nexport default function(logKey) {\n    return `[TaskRunner]${this.config.name}: ${logs[logKey]}`;\n}\n","'use strict';\n\nimport {\n    startCheckAndRun,\n    runPending,\n    startCheck,\n    addCheck,\n    removeCheck,\n    setAppropriateConcurrency\n} from './PrivateFunctions';\nimport log from './log';\n\nimport {\n    isNumber,\n    assignFunction,\n    isFunction,\n    isArray,\n    assignNumber\n} from './util';\n\nexport default class TaskRunner {\n    static runnerCount = 0;\n\n    constructor(config = {}) {\n        const {\n            concurrency,\n            onAdd,\n            onStart,\n            onDone,\n            onEnd,\n            ...otherConfig\n        } = config;\n        this.config = {\n            autoStart: true,\n            name: `Runner ${++TaskRunner.runnerCount}`,\n            ...otherConfig\n        };\n\n        this.setConcurrency(concurrency);\n        this.onAdd = assignFunction(onAdd);\n        this.onStart = assignFunction(onStart);\n        this.onDone = assignFunction(onDone);\n        this.onEnd = assignFunction(onEnd);\n\n        Object.seal(this);\n    }\n    __working = false;\n    tasks = {\n        list: [],\n        total: 0,\n        completed: 0,\n        running: 0\n    };\n    duration = {\n        start: 0,\n        end: 0,\n        total: 0\n    };\n\n    isBusy = () => this.__working;\n\n    setConcurrency = concurrency => {\n        concurrency = parseInt(concurrency, 10);\n        if (!isNumber(concurrency)) {\n            console.warn(log.call(this, 'concurrency_not_a_number'));\n        }\n\n        if (concurrency < 0) {\n            concurrency = Math.abs(concurrency);\n            console.warn(\n                log.call(this, 'concurrency_should_be_positive_integer')\n            );\n        }\n\n        this.concurrency = assignNumber(concurrency, 3, this.tasks.total);\n        if (this.__working) {\n            runPending.call(this);\n        }\n    };\n\n    start = () => {\n        if (this.__working) {\n            console.warn(log.call(this, 'already_running'));\n            return false;\n        }\n\n        if (this.config.autoStart) {\n            console.warn(log.call(this, 'auto_start_true'));\n            return false;\n        }\n\n        startCheck.call(this);\n        runPending.call(this);\n        return true;\n    };\n\n    add = (task, first = false) => {\n        if (isFunction(task)) {\n            const { autoStart } = this.config;\n\n            if (first) {\n                this.tasks.list.push(task);\n            } else {\n                this.tasks.list.unshift(task);\n            }\n\n            this.tasks.total++;\n            if (autoStart) {\n                startCheckAndRun.call(this);\n            }\n\n            addCheck.call(this);\n            return true;\n        }\n\n        throw new TypeError(log('add_requires_function'));\n    };\n\n    addFirst = task => {\n        this.add(task, true);\n    };\n\n    addMultiple = (tasks, first) => {\n        if (isArray(tasks) && tasks.every(t => isFunction(t))) {\n            const { autoStart } = this.config;\n\n            this.tasks = {\n                ...this.tasks,\n                list: first\n                    ? [...tasks, ...this.tasks.list]\n                    : [...this.tasks.list, ...tasks],\n                total: this.tasks.total + tasks.length\n            };\n\n            if (autoStart) {\n                startCheckAndRun.call(this);\n            }\n\n            addCheck.call(this);\n            return true;\n        }\n\n        throw new TypeError(\n            log.call(this, 'add_multiple_requires_array_of_functions')\n        );\n    };\n\n    addMultipleFirst = tasks => {\n        this.addMultiple(tasks, first);\n    };\n\n    remove = (first = false) => {\n        const task = first ? this.tasks.list.shift() : this.tasks.list.pop();\n        this.tasks.total = this.tasks.list.length + this.tasks.completed;\n        removeCheck.call(this);\n        return task;\n    };\n\n    removeFirst = () => {\n        this.remove(true);\n    };\n\n    removeAt = index => {\n        const task = this.tasks.list.splice(index, 1);\n        this.tasks.total = this.tasks.list.length + this.tasks.completed;\n        removeCheck.call(this);\n        return task;\n    };\n\n    removeAll = () => {\n        this.tasks.list = [];\n        this.tasks.total = this.tasks.completed;\n        removeCheck.call(this);\n        return this.tasks.list;\n    };\n}\n"],"sourceRoot":""}